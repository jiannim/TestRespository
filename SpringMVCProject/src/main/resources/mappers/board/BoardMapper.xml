<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardMapper">

	<!-- DB컬럼과 VO필드명이 다른 경우 처리 방법 -->
	<resultMap id="BoardResultMap"  type="BoardVO">
		<id property="boardNo" column="board_no" />
		<result property="title" column="title" />
		<result property="content" column="content" />
		<result property="writer" column="writer" />
		<result property="regDate" column="reg_date" />
		<result property="viewCnt" column="view_cnt" />
		<result property="replyCnt" column="reply_cnt"/>
	</resultMap>

	<!-- 게시물 등록 -->
	<insert id="insert">
		INSERT INTO mvc_board (title, content, writer) 
		VALUES (#{title}, #{content}, #{writer})     
	</insert>
	
	<!-- 단일 게시물 조회 -->
	<select id="getArticle" resultMap="BoardResultMap">
		SELECT * FROM mvc_board 
		WHERE board_no = #{boardNo}
	</select>
	
	<!-- 게시물 수정 -->
	<update id="update">
        UPDATE mvc_board
        SET title = #{title}, content = #{content}
        WHERE board_no = #{boardNo}
    </update>
	
	<!-- 게시물 삭제 -->
    <delete id="delete">
        DELETE FROM mvc_board 
        WHERE board_no = #{boardNo}
    </delete>
    
    <!-- 모든 게시물 조회 -->
    <!-- 
    	xml에서 SQL구문 작성시 연산자기호와 문자열을 구분할 수 없을 경우 
    	<![CDATA]]> 구문 안에  SQL을 작성하면 연산자 기호를 문자열로 처리할 
    	 수 있습니다.
    -->
    <select id="getAllArticles" resultMap="BoardResultMap">
    	<![CDATA[
    	SELECT * FROM mvc_board 
    	WHERE board_no > 0 
    	ORDER BY board_no desc
    	]]>
    </select>
    
    
    <!-- 페이지별 게시물 조회 -->
    <select id="listPaging" resultMap="BoardResultMap">
    	select * from mvc_board order by board_no desc limit #{pageStart}, #{countPerPage}
    </select>
    
    <!-- 총 게시물수 가져오기 -->
    <select id="countArticles" resultType="int">
    	select count(*) from mvc_board
    </select>
    
    
    <!-- 제목으로 검색한 목록 가져오기 -->
    <select id = "listSearchByTitle" resultMap="BoardResultMap">
    	select * from mvc_board 
    	where title 
    	like CONCAT('%', #{keyword}, '%') 
    	order by board_no desc 
    	limit #{pageStart}, #{countPerPage}
    </select>
    
    <!-- 조회수 상승 구문 처리 -->
    <update id="updateViewCnt">
    	update mvc_board 
    	set view_cnt = view_cnt + 1 
    	where board_no = #{boardNo}
    </update>
    
	<!-- 댓글 수 수정 sql -->
	<update id="updatereplyCnt">
		update mvc_board 
		set reply_cnt = reply_cnt + #{count} 
		where board_no = #{boardNo}
	</update>
	
	<!-- 게시글 댓글  삭제 -->
		<delete id = "deleteAll">
		delete from mvc_board where board_no = #{boardNo}
		</delete>
     
     
     
     <!-- 종복되는 동적 sql 구문 처리 -->
     
     <sql id="search">
     <if test="condition != ''">
    		<if test="condition == 'title'"> 
        	where title like concat('%', #{keyword}, '%')
        	</if> 
        	<if test="condition == 'content'"> 
        	where content like concat('%', #{keyword}, '%')
        	</if> 
        	<if test="condition == 'writer'"> 
        	where writer like concat('%', #{keyword}, '%')
        	</if> 
        	<if test="condition == 'titlecontent'"> 
        	where content like concat('%', #{keyword}, '%') or title like concat('%', #{keyword}, '%')
        	</if> 
       </if>
     </sql>
    
    <!-- 검색된 게시물 수 조회처리 -->
    	<select id = "countSearchArticles" resultType="int">
        	select count(*) from mvc_board <include refid="search"/> order by board_no desc limit #{pageStart}, #{countPerPage}
  </select>
    	
    <!-- 검색된 게시물 목록 조회처리 -->
    <select id = "listSearch" resultMap="BoardResultMap">
    	select * from mvc_board <include refid="search"/> order by board_no desc limit #{pageStart}, #{countPerPage}
    </select>

</mapper>







